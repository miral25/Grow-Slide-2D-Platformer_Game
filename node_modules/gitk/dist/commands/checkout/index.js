"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkout = void 0;
const terminal_1 = require("../../utils/terminal");
const readline_1 = __importDefault(require("readline"));
function checkout() {
    (0, terminal_1.terminal)(`git fetch -p`);
    const branches = (0, terminal_1.terminal)(`git branch -r --format='%(refname:short)'`)
        .split("\n")
        .map((branch) => {
        return branch.replace(/origin\/HEAD/g, "").replace(/origin\//g, "");
    })
        .filter((branch) => branch !== "");
    let index = 0;
    readline_1.default.emitKeypressEvents(process.stdin);
    if (process.stdin.isTTY)
        process.stdin.setRawMode(true);
    process.stdin.on("keypress", (chunk, key) => {
        switch (key.name) {
            case "up":
                if (index > 0)
                    index--;
                break;
            case "down":
                if (index < branches.length - 1)
                    index++;
                break;
            case "return":
                console.clear();
                (0, terminal_1.terminal)(`git checkout ${branches[index]}`);
                console.log("OK");
                process.exit();
            case "escape":
                console.clear();
                process.exit();
        }
        draw();
    });
    function draw() {
        console.clear();
        branches.forEach((branch, current) => {
            if (current === index) {
                console.log(`\x1b[33m${branch}\x1b[0m ‚Üê`);
            }
            else {
                console.log(`${branch}`);
            }
        });
    }
    draw();
}
exports.checkout = checkout;
//# sourceMappingURL=index.js.map